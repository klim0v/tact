open Base
module L = MenhirLib.LexerUtil

let pp = Sexplib.Sexp.pp_hum Caml.Format.std_formatter

let parse ?(filename = "noname.tlb") text =
  let lexbuf = L.init filename @@ Lexing.from_string text in
  Parser.root Lexer.token lexbuf

let%expect_test "block.tlb" =
  pp
  @@ List.sexp_of_t Lang.sexp_of_combinator
  @@ Lang.of_syntax
  @@ parse ~filename:"block.tlb" Block.tlb ;
  [%expect
    {|
    (((combinator_ident StorageInfo) (combinator_eqs ()))
     ((combinator_ident ShardAccountBlocks) (combinator_eqs ()))
     ((combinator_ident DNS_RecordSet) (combinator_eqs ()))
     ((combinator_ident ValidatorComplaint) (combinator_eqs ()))
     ((combinator_ident Counters) (combinator_eqs ()))
     ((combinator_ident CreatorStats) (combinator_eqs ()))
     ((combinator_ident VmLibraries) (combinator_eqs ()))
     ((combinator_ident Bool) (combinator_eqs ()))
     ((combinator_ident VarInteger) (combinator_eqs ()))
     ((combinator_ident ShardHashes) (combinator_eqs ()))
     ((combinator_ident MsgAddressInt) (combinator_eqs ()))
     ((combinator_ident ValidatorBaseInfo) (combinator_eqs ()))
     ((combinator_ident HASH_UPDATE) (combinator_eqs ()))
     ((combinator_ident VmStack) (combinator_eqs ()))
     ((combinator_ident TopBlockDescr) (combinator_eqs ()))
     ((combinator_ident ConfigParam) (combinator_eqs ()))
     ((combinator_ident ValueFlow) (combinator_eqs ()))
     ((combinator_ident VarHashmapNode) (combinator_eqs ()))
     ((combinator_ident Protocol) (combinator_eqs ()))
     ((combinator_ident ChanSignedPromise) (combinator_eqs ()))
     ((combinator_ident VmStackList) (combinator_eqs ()))
     ((combinator_ident BoolFalse) (combinator_eqs ()))
     ((combinator_ident Maybe) (combinator_eqs ()))
     ((combinator_ident HashmapE) (combinator_eqs ()))
     ((combinator_ident CommonMsgInfo) (combinator_eqs ()))
     ((combinator_ident ProtoList) (combinator_eqs ()))
     ((combinator_ident ImportFees) (combinator_eqs ()))
     ((combinator_ident InMsg) (combinator_eqs ()))
     ((combinator_ident MERKLE_UPDATE) (combinator_eqs ()))
     ((combinator_ident BlockSignatures) (combinator_eqs ()))
     ((combinator_ident OutList) (combinator_eqs ()))
     ((combinator_ident KeyMaxLt) (combinator_eqs ()))
     ((combinator_ident PfxHashmapNode) (combinator_eqs ()))
     ((combinator_ident MessageAny) (combinator_eqs ()))
     ((combinator_ident ChanMsg) (combinator_eqs ()))
     ((combinator_ident StoragePrices) (combinator_eqs ()))
     ((combinator_ident HashmapAugE) (combinator_eqs ()))
     ((combinator_ident ConfigProposalSetup) (combinator_eqs ()))
     ((combinator_ident ValidatorTempKey) (combinator_eqs ()))
     ((combinator_ident MisbehaviourPunishmentConfig) (combinator_eqs ()))
     ((combinator_ident ValidatorSignedTempKey) (combinator_eqs ()))
     ((combinator_ident StorageUsed) (combinator_eqs ()))
     ((combinator_ident ComplaintPricing) (combinator_eqs ()))
     ((combinator_ident MsgAddress) (combinator_eqs ()))
     ((combinator_ident CertificateEnv) (combinator_eqs ()))
     ((combinator_ident OldMcBlocksInfo) (combinator_eqs ()))
     ((combinator_ident TextChunkRef) (combinator_eqs ()))
     ((combinator_ident ExtBlkRef) (combinator_eqs ()))
     ((combinator_ident EnqueuedMsg) (combinator_eqs ()))
     ((combinator_ident BlockIdExt) (combinator_eqs ()))
     ((combinator_ident TrStoragePhase) (combinator_eqs ()))
     ((combinator_ident ShardFees) (combinator_eqs ()))
     ((combinator_ident ParamLimits) (combinator_eqs ()))
     ((combinator_ident OutMsgDescr) (combinator_eqs ()))
     ((combinator_ident VmSaveList) (combinator_eqs ()))
     ((combinator_ident StateInit) (combinator_eqs ()))
     ((combinator_ident Grams) (combinator_eqs ()))
     ((combinator_ident BlockSignaturesPure) (combinator_eqs ()))
     ((combinator_ident CommonMsgInfoRelaxed) (combinator_eqs ()))
     ((combinator_ident BlkPrevInfo) (combinator_eqs ()))
     ((combinator_ident PfxHashmap) (combinator_eqs ()))
     ((combinator_ident InMsgDescr) (combinator_eqs ()))
     ((combinator_ident ChanPromise) (combinator_eqs ()))
     ((combinator_ident TickTock) (combinator_eqs ()))
     ((combinator_ident TextChunks) (combinator_eqs ()))
     ((combinator_ident ChanState) (combinator_eqs ()))
     ((combinator_ident GlobalVersion) (combinator_eqs ()))
     ((combinator_ident VmGasLimits) (combinator_eqs ()))
     ((combinator_ident SplitMergeInfo) (combinator_eqs ()))
     ((combinator_ident ProcessedUpto) (combinator_eqs ()))
     ((combinator_ident CurrencyCollection) (combinator_eqs ()))
     ((combinator_ident GasLimitsPrices) (combinator_eqs ()))
     ((combinator_ident ChanData) (combinator_eqs ()))
     ((combinator_ident BinTree) (combinator_eqs ()))
     ((combinator_ident TrActionPhase) (combinator_eqs ()))
     ((combinator_ident WorkchainDescr) (combinator_eqs ()))
     ((combinator_ident VmStackValue) (combinator_eqs ()))
     ((combinator_ident Account) (combinator_eqs ()))
     ((combinator_ident ConfigVotingSetup) (combinator_eqs ()))
     ((combinator_ident ComplaintDescr) (combinator_eqs ()))
     ((combinator_ident ValidatorSet) (combinator_eqs ()))
     ((combinator_ident AccountState) (combinator_eqs ()))
     ((combinator_ident ComputeSkipReason) (combinator_eqs ()))
     ((combinator_ident ProcessedInfo) (combinator_eqs ()))
     ((combinator_ident VarHashmap) (combinator_eqs ()))
     ((combinator_ident CatchainConfig) (combinator_eqs ()))
     ((combinator_ident ValidatorDescr) (combinator_eqs ()))
     ((combinator_ident ConsensusConfig) (combinator_eqs ()))
     ((combinator_ident OutMsg) (combinator_eqs ()))
     ((combinator_ident SimpleLib) (combinator_eqs ()))
     ((combinator_ident ConfigProposal) (combinator_eqs ()))
     ((combinator_ident IhrPendingInfo) (combinator_eqs ()))
     ((combinator_ident ShardDescr) (combinator_eqs ()))
     ((combinator_ident HmLabel) (combinator_eqs ()))
     ((combinator_ident Block) (combinator_eqs ()))
     ((combinator_ident BlockExtra) (combinator_eqs ()))
     ((combinator_ident MsgAddressExt) (combinator_eqs ()))
     ((combinator_ident BlockProof) (combinator_eqs ()))
     ((combinator_ident WorkchainFormat) (combinator_eqs ()))
     ((combinator_ident ProducerInfo) (combinator_eqs ()))
     ((combinator_ident Hashmap) (combinator_eqs ()))
     ((combinator_ident DNSRecord) (combinator_eqs ()))
     ((combinator_ident AccountBlock) (combinator_eqs ()))
     ((combinator_ident MsgForwardPrices) (combinator_eqs ()))
     ((combinator_ident CryptoSignatureSimple) (combinator_eqs ()))
     ((combinator_ident TrCreditPhase) (combinator_eqs ()))
     ((combinator_ident ChanConfig) (combinator_eqs ()))
     ((combinator_ident VmTuple) (combinator_eqs ()))
     ((combinator_ident ValidatorComplaintStatus) (combinator_eqs ()))
     ((combinator_ident TrComputePhase) (combinator_eqs ()))
     ((combinator_ident VmCellSlice) (combinator_eqs ()))
     ((combinator_ident True) (combinator_eqs ()))
     ((combinator_ident ConfigParams) (combinator_eqs ()))
     ((combinator_ident SigPubKey) (combinator_eqs ()))
     ((combinator_ident OutListNode) (combinator_eqs ()))
     ((combinator_ident PfxHashmapE) (combinator_eqs ()))
     ((combinator_ident IhrPendingSince) (combinator_eqs ()))
     ((combinator_ident Transaction) (combinator_eqs ()))
     ((combinator_ident VmControlData) (combinator_eqs ()))
     ((combinator_ident KeyExtBlkRef) (combinator_eqs ()))
     ((combinator_ident SignedCertificate) (combinator_eqs ()))
     ((combinator_ident VarHashmapE) (combinator_eqs ()))
     ((combinator_ident OutMsgQueue) (combinator_eqs ()))
     ((combinator_ident ShardIdent) (combinator_eqs ()))
     ((combinator_ident ChanOp) (combinator_eqs ()))
     ((combinator_ident MessageRelaxed) (combinator_eqs ()))
     ((combinator_ident Certificate) (combinator_eqs ()))
     ((combinator_ident IntermediateAddress) (combinator_eqs ()))
     ((combinator_ident ShardAccount) (combinator_eqs ()))
     ((combinator_ident AccountStatus) (combinator_eqs ()))
     ((combinator_ident TransactionDescr) (combinator_eqs ()))
     ((combinator_ident CryptoSignaturePair) (combinator_eqs ()))
     ((combinator_ident ShardState) (combinator_eqs ()))
     ((combinator_ident BitstringSet) (combinator_eqs ()))
     ((combinator_ident TrBouncePhase) (combinator_eqs ()))
     ((combinator_ident OracleBridgeParams) (combinator_eqs ()))
     ((combinator_ident AccStatusChange) (combinator_eqs ()))
     ((combinator_ident OutAction) (combinator_eqs ()))
     ((combinator_ident McBlockExtra) (combinator_eqs ()))
     ((combinator_ident LibRef) (combinator_eqs ()))
     ((combinator_ident BinTreeAug) (combinator_eqs ()))
     ((combinator_ident VmCont) (combinator_eqs ()))
     ((combinator_ident SmartContractInfo) (combinator_eqs ()))
     ((combinator_ident ExtraCurrencyCollection) (combinator_eqs ()))
     ((combinator_ident StorageUsedShort) (combinator_eqs ()))
     ((combinator_ident ChanSignedMsg) (combinator_eqs ()))
     ((combinator_ident BlockCreateStats) (combinator_eqs ()))
     ((combinator_ident VmTupleRef) (combinator_eqs ()))
     ((combinator_ident MsgEnvelope) (combinator_eqs ()))
     ((combinator_ident OutMsgQueueInfo) (combinator_eqs ()))
     ((combinator_ident Text) (combinator_eqs ()))
     ((combinator_ident ShardFeeCreated) (combinator_eqs ()))
     ((combinator_ident ShardAccounts) (combinator_eqs ()))
     ((combinator_ident BlockInfo) (combinator_eqs ()))
     ((combinator_ident Bit) (combinator_eqs ()))
     ((combinator_ident Anycast) (combinator_eqs ()))
     ((combinator_ident Either) (combinator_eqs ()))
     ((combinator_ident BlockCreateFees) (combinator_eqs ()))
     ((combinator_ident SmcCapability) (combinator_eqs ()))
     ((combinator_ident MERKLE_PROOF) (combinator_eqs ()))
     ((combinator_ident Unit) (combinator_eqs ()))
     ((combinator_ident SmcCapList) (combinator_eqs ()))
     ((combinator_ident TopBlockDescrSet) (combinator_eqs ()))
     ((combinator_ident HashmapNode) (combinator_eqs ()))
     ((combinator_ident CryptoSignature) (combinator_eqs ()))
     ((combinator_ident HashmapAugNode) (combinator_eqs ()))
     ((combinator_ident BoolTrue) (combinator_eqs ()))
     ((combinator_ident Unary) (combinator_eqs ()))
     ((combinator_ident Message) (combinator_eqs ()))
     ((combinator_ident ConfigProposalStatus) (combinator_eqs ()))
     ((combinator_ident AccountStorage) (combinator_eqs ()))
     ((combinator_ident BlockLimits) (combinator_eqs ()))
     ((combinator_ident ValidatorInfo) (combinator_eqs ()))
     ((combinator_ident ShardStateUnsplit) (combinator_eqs ()))
     ((combinator_ident ProofChain) (combinator_eqs ()))
     ((combinator_ident FutureSplitMerge) (combinator_eqs ()))
     ((combinator_ident Both) (combinator_eqs ()))
     ((combinator_ident DepthBalanceInfo) (combinator_eqs ()))
     ((combinator_ident HashmapAug) (combinator_eqs ()))
     ((combinator_ident BlkMasterInfo) (combinator_eqs ()))
     ((combinator_ident VarUInteger) (combinator_eqs ()))
     ((combinator_ident McStateExtra) (combinator_eqs ()))
     ((combinator_ident LibDescr) (combinator_eqs ()))) |}]
