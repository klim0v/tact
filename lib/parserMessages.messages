program: RPAREN
##
## Ends in an error in state: 0.
##
## program' -> . program [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION UNION
##
## Ends in an error in state: 1.
##
## list(top_level_expr) -> UNION . IDENT LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT UNION
##
## Ends in an error in state: 2.
##
## list(top_level_expr) -> UNION IDENT . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN UNION
##
## Ends in an error in state: 3.
##
## list(top_level_expr) -> UNION IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT UNION
##
## Ends in an error in state: 4.
##
## nonempty_list(terminated(function_param,COMMA)) -> IDENT . COLON expr COMMA [ RPAREN ]
## nonempty_list(terminated(function_param,COMMA)) -> IDENT . COLON expr COMMA nonempty_list(terminated(function_param,COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT . COLON expr [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT . COLON expr COMMA separated_nonempty_list(COMMA,function_param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON RPAREN
##
## Ends in an error in state: 5.
##
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON . expr COMMA [ RPAREN ]
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON . expr COMMA nonempty_list(terminated(function_param,COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON . expr [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON . expr COMMA separated_nonempty_list(COMMA,function_param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS UNION UNION
##
## Ends in an error in state: 6.
##
## expr -> UNION . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> UNION . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## UNION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS UNION LBRACKET RPAREN
##
## Ends in an error in state: 7.
##
## expr -> UNION LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> UNION LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## UNION LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET UNION UNION
##
## Ends in an error in state: 8.
##
## union_member -> UNION . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> UNION . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## UNION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET UNION LBRACKET RPAREN
##
## Ends in an error in state: 9.
##
## union_member -> UNION LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> UNION LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## UNION LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET STRUCT UNION
##
## Ends in an error in state: 10.
##
## union_member -> STRUCT . LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> STRUCT . LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## STRUCT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET STRUCT LBRACKET UNION
##
## Ends in an error in state: 11.
##
## union_member -> STRUCT LBRACKET . nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> STRUCT LBRACKET . loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## STRUCT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LBRACKET IDENT UNION
##
## Ends in an error in state: 12.
##
## nonempty_list(terminated(struct_fields,COMMA)) -> IDENT . COLON expr COMMA [ RBRACKET FN ]
## nonempty_list(terminated(struct_fields,COMMA)) -> IDENT . COLON expr COMMA nonempty_list(terminated(struct_fields,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,struct_fields) -> IDENT . COLON expr [ RBRACKET FN ]
## separated_nonempty_list(COMMA,struct_fields) -> IDENT . COLON expr COMMA separated_nonempty_list(COMMA,struct_fields) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LBRACKET IDENT COLON RPAREN
##
## Ends in an error in state: 13.
##
## nonempty_list(terminated(struct_fields,COMMA)) -> IDENT COLON . expr COMMA [ RBRACKET FN ]
## nonempty_list(terminated(struct_fields,COMMA)) -> IDENT COLON . expr COMMA nonempty_list(terminated(struct_fields,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,struct_fields) -> IDENT COLON . expr [ RBRACKET FN ]
## separated_nonempty_list(COMMA,struct_fields) -> IDENT COLON . expr COMMA separated_nonempty_list(COMMA,struct_fields) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS STRUCT UNION
##
## Ends in an error in state: 14.
##
## expr -> STRUCT . LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> STRUCT . LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## STRUCT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS STRUCT LBRACKET UNION
##
## Ends in an error in state: 15.
##
## expr -> STRUCT LBRACKET . nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> STRUCT LBRACKET . loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## STRUCT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN UNION
##
## Ends in an error in state: 18.
##
## list(sugared_function_definition) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT UNION
##
## Ends in an error in state: 19.
##
## list(sugared_function_definition) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN UNION
##
## Ends in an error in state: 20.
##
## list(sugared_function_definition) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 23.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN UNION
##
## Ends in an error in state: 24.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 26.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON RPAREN
##
## Ends in an error in state: 27.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS INTERFACE UNION
##
## Ends in an error in state: 28.
##
## expr -> INTERFACE . LBRACKET list(located(function_signature)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## INTERFACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS INTERFACE LBRACKET UNION
##
## Ends in an error in state: 29.
##
## expr -> INTERFACE LBRACKET . list(located(function_signature)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## INTERFACE LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN UNION
##
## Ends in an error in state: 30.
##
## list(located(function_signature)) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr list(located(function_signature)) [ RBRACKET ]
## list(located(function_signature)) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr list(located(function_signature)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT UNION
##
## Ends in an error in state: 31.
##
## list(located(function_signature)) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr list(located(function_signature)) [ RBRACKET ]
## list(located(function_signature)) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr list(located(function_signature)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN UNION
##
## Ends in an error in state: 32.
##
## list(located(function_signature)) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr list(located(function_signature)) [ RBRACKET ]
## list(located(function_signature)) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr list(located(function_signature)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 34.
##
## list(located(function_signature)) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . COLON expr list(located(function_signature)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON RPAREN
##
## Ends in an error in state: 35.
##
## list(located(function_signature)) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON . expr list(located(function_signature)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN UNION
##
## Ends in an error in state: 38.
##
## expr -> FN . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> FN . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## FN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN UNION
##
## Ends in an error in state: 39.
##
## expr -> FN LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> FN LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 41.
##
## expr -> FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN IDENT COLON IDENT COMMA RPAREN COLON RPAREN
##
## Ends in an error in state: 42.
##
## expr -> FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS ENUM UNION
##
## Ends in an error in state: 43.
##
## expr -> ENUM . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> ENUM . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS ENUM LBRACKET UNION
##
## Ends in an error in state: 44.
##
## expr -> ENUM LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> ENUM LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT UNION
##
## Ends in an error in state: 45.
##
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT . COMMA [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT . EQUALS expr COMMA [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT . COMMA nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT . EQUALS expr COMMA nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT . [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT . EQUALS expr [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT . COMMA separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT . EQUALS expr COMMA separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT EQUALS RPAREN
##
## Ends in an error in state: 46.
##
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS . expr COMMA [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS . expr COMMA nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS . expr [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS . expr COMMA separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT EQUALS IDENT UNION
##
## Ends in an error in state: 47.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RBRACKET LPAREN FN COMMA ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RBRACKET LPAREN FN COMMA ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS expr . COMMA [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS expr . COMMA nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS expr . [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS expr . COMMA separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT EQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT LPAREN RBRACKET
##
## Ends in an error in state: 48.
##
## expr -> expr LPAREN . nonempty_list(terminated(located(expr),COMMA)) RPAREN [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> expr LPAREN . loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## expr LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT LPAREN IDENT UNION
##
## Ends in an error in state: 54.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RPAREN LPAREN COMMA ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RPAREN LPAREN COMMA ]
## nonempty_list(terminated(located(expr),COMMA)) -> expr . COMMA [ RPAREN ]
## nonempty_list(terminated(located(expr),COMMA)) -> expr . COMMA nonempty_list(terminated(located(expr),COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,located(expr)) -> expr . [ RPAREN ]
## separated_nonempty_list(COMMA,located(expr)) -> expr . COMMA separated_nonempty_list(COMMA,located(expr)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT LPAREN IDENT COMMA RBRACKET
##
## Ends in an error in state: 55.
##
## nonempty_list(terminated(located(expr),COMMA)) -> expr COMMA . [ RPAREN ]
## nonempty_list(terminated(located(expr),COMMA)) -> expr COMMA . nonempty_list(terminated(located(expr),COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,located(expr)) -> expr COMMA . separated_nonempty_list(COMMA,located(expr)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT EQUALS IDENT COMMA UNION
##
## Ends in an error in state: 58.
##
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS expr COMMA . [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS expr COMMA . nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS expr COMMA . separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT EQUALS expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT COMMA UNION
##
## Ends in an error in state: 61.
##
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT COMMA . [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT COMMA . nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT COMMA . separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT UNION
##
## Ends in an error in state: 71.
##
## expr -> FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
##
## The known suffix of the stack is as follows:
## FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 72.
##
## expr -> FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN COLON IDENT LBRACKET IDENT RPAREN
##
## Ends in an error in state: 75.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ UNION STRUCT RBRACKET LPAREN INTERFACE INT IDENT FN ENUM ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ UNION STRUCT RBRACKET LPAREN INTERFACE INT IDENT FN ENUM ]
## list(located(expr)) -> expr . list(located(expr)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN RPAREN UNION
##
## Ends in an error in state: 78.
##
## expr -> FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN RPAREN COLON RPAREN
##
## Ends in an error in state: 79.
##
## expr -> FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN RPAREN COLON IDENT UNION
##
## Ends in an error in state: 80.
##
## expr -> FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
##
## The known suffix of the stack is as follows:
## FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 81.
##
## expr -> FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET [ UNION STRUCT RPAREN RBRACKET LPAREN LET LBRACKET INTERFACE INT IDENT FN EOF ENUM COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT UNION
##
## Ends in an error in state: 84.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RBRACKET LPAREN FN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RBRACKET LPAREN FN ]
## list(located(function_signature)) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr . list(located(function_signature)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 87.
##
## list(located(function_signature)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . COLON expr list(located(function_signature)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN RPAREN COLON RPAREN
##
## Ends in an error in state: 88.
##
## list(located(function_signature)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON . expr list(located(function_signature)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN RPAREN COLON IDENT UNION
##
## Ends in an error in state: 89.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RBRACKET LPAREN FN ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RBRACKET LPAREN FN ]
## list(located(function_signature)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr . list(located(function_signature)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT UNION
##
## Ends in an error in state: 93.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 94.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 96.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN UNION
##
## Ends in an error in state: 99.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN COLON RPAREN
##
## Ends in an error in state: 100.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN COLON IDENT UNION
##
## Ends in an error in state: 101.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 102.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN COLON IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 104.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON RPAREN
##
## Ends in an error in state: 106.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT UNION
##
## Ends in an error in state: 107.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 108.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 110.
##
## list(sugared_function_definition) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 113.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN UNION
##
## Ends in an error in state: 114.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 116.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON RPAREN
##
## Ends in an error in state: 117.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT UNION
##
## Ends in an error in state: 118.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 119.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 121.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN RPAREN UNION
##
## Ends in an error in state: 124.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN RPAREN COLON RPAREN
##
## Ends in an error in state: 125.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN RPAREN COLON IDENT UNION
##
## Ends in an error in state: 126.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 127.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN RPAREN COLON IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 129.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN COLON RPAREN
##
## Ends in an error in state: 131.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN COLON IDENT UNION
##
## Ends in an error in state: 132.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 133.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN COLON IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 135.
##
## list(sugared_function_definition) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LBRACKET IDENT COLON IDENT UNION
##
## Ends in an error in state: 142.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RBRACKET LPAREN FN COMMA ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RBRACKET LPAREN FN COMMA ]
## nonempty_list(terminated(struct_fields,COMMA)) -> IDENT COLON expr . COMMA [ RBRACKET FN ]
## nonempty_list(terminated(struct_fields,COMMA)) -> IDENT COLON expr . COMMA nonempty_list(terminated(struct_fields,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,struct_fields) -> IDENT COLON expr . [ RBRACKET FN ]
## separated_nonempty_list(COMMA,struct_fields) -> IDENT COLON expr . COMMA separated_nonempty_list(COMMA,struct_fields) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LBRACKET IDENT COLON IDENT COMMA UNION
##
## Ends in an error in state: 143.
##
## nonempty_list(terminated(struct_fields,COMMA)) -> IDENT COLON expr COMMA . [ RBRACKET FN ]
## nonempty_list(terminated(struct_fields,COMMA)) -> IDENT COLON expr COMMA . nonempty_list(terminated(struct_fields,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,struct_fields) -> IDENT COLON expr COMMA . separated_nonempty_list(COMMA,struct_fields) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET INTERFACE UNION
##
## Ends in an error in state: 152.
##
## union_member -> INTERFACE . LBRACKET list(located(function_signature)) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## INTERFACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET INTERFACE LBRACKET UNION
##
## Ends in an error in state: 153.
##
## union_member -> INTERFACE LBRACKET . list(located(function_signature)) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## INTERFACE LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET IDENT UNION
##
## Ends in an error in state: 156.
##
## union_member -> IDENT . [ RBRACKET FN COMMA ]
## union_member -> IDENT . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RBRACKET FN COMMA ]
## union_member -> IDENT . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET IDENT LPAREN RBRACKET
##
## Ends in an error in state: 157.
##
## union_member -> IDENT LPAREN . nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RBRACKET FN COMMA ]
## union_member -> IDENT LPAREN . loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET ENUM UNION
##
## Ends in an error in state: 162.
##
## union_member -> ENUM . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> ENUM . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET ENUM LBRACKET UNION
##
## Ends in an error in state: 163.
##
## union_member -> ENUM LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> ENUM LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET UNION LBRACKET RBRACKET UNION
##
## Ends in an error in state: 170.
##
## nonempty_list(terminated(located(union_member),COMMA)) -> union_member . COMMA [ RBRACKET FN ]
## nonempty_list(terminated(located(union_member),COMMA)) -> union_member . COMMA nonempty_list(terminated(located(union_member),COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,located(union_member)) -> union_member . [ RBRACKET FN ]
## separated_nonempty_list(COMMA,located(union_member)) -> union_member . COMMA separated_nonempty_list(COMMA,located(union_member)) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## union_member
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET IDENT COMMA RPAREN
##
## Ends in an error in state: 171.
##
## nonempty_list(terminated(located(union_member),COMMA)) -> union_member COMMA . [ RBRACKET FN ]
## nonempty_list(terminated(located(union_member),COMMA)) -> union_member COMMA . nonempty_list(terminated(located(union_member),COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,located(union_member)) -> union_member COMMA . separated_nonempty_list(COMMA,located(union_member)) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## union_member COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT UNION
##
## Ends in an error in state: 187.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RPAREN LPAREN COMMA ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RPAREN LPAREN COMMA ]
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON expr . COMMA [ RPAREN ]
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON expr . COMMA nonempty_list(terminated(function_param,COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON expr . [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON expr . COMMA separated_nonempty_list(COMMA,function_param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA UNION
##
## Ends in an error in state: 188.
##
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON expr COMMA . [ RPAREN ]
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON expr COMMA . nonempty_list(terminated(function_param,COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON expr COMMA . separated_nonempty_list(COMMA,function_param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 192.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RPAREN
##
## Ends in an error in state: 193.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET IDENT COMMA RBRACKET RPAREN
##
## Ends in an error in state: 196.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT UNION
##
## Ends in an error in state: 197.
##
## list(top_level_expr) -> STRUCT . IDENT LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT . IDENT LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT UNION
##
## Ends in an error in state: 198.
##
## list(top_level_expr) -> STRUCT IDENT . LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT . LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LPAREN UNION
##
## Ends in an error in state: 199.
##
## list(top_level_expr) -> STRUCT IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 201.
##
## list(top_level_expr) -> STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET UNION
##
## Ends in an error in state: 202.
##
## list(top_level_expr) -> STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET IDENT COLON IDENT COMMA RBRACKET RPAREN
##
## Ends in an error in state: 205.
##
## list(top_level_expr) -> STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET UNION
##
## Ends in an error in state: 206.
##
## list(top_level_expr) -> LET . IDENT EQUALS expr list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT UNION
##
## Ends in an error in state: 207.
##
## list(top_level_expr) -> LET IDENT . EQUALS expr list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN UNION
##
## Ends in an error in state: 208.
##
## list(top_level_expr) -> LET IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 210.
##
## list(top_level_expr) -> LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . EQUALS expr list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN IDENT COLON IDENT COMMA RPAREN EQUALS RPAREN
##
## Ends in an error in state: 211.
##
## list(top_level_expr) -> LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS . expr list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN IDENT COLON IDENT COMMA RPAREN EQUALS IDENT RPAREN
##
## Ends in an error in state: 212.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ UNION STRUCT LPAREN LET INTERFACE FN EOF ENUM ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ UNION STRUCT LPAREN LET INTERFACE FN EOF ENUM ]
## list(top_level_expr) -> LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE UNION
##
## Ends in an error in state: 213.
##
## list(top_level_expr) -> INTERFACE . IDENT LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT UNION
##
## Ends in an error in state: 214.
##
## list(top_level_expr) -> INTERFACE IDENT . LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN UNION
##
## Ends in an error in state: 215.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 217.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET UNION
##
## Ends in an error in state: 218.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 220.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature)) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN UNION
##
## Ends in an error in state: 221.
##
## list(top_level_expr) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT UNION
##
## Ends in an error in state: 222.
##
## list(top_level_expr) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN UNION
##
## Ends in an error in state: 223.
##
## list(top_level_expr) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 225.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN UNION
##
## Ends in an error in state: 226.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 228.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON RPAREN
##
## Ends in an error in state: 229.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT UNION
##
## Ends in an error in state: 230.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 231.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 233.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM UNION
##
## Ends in an error in state: 234.
##
## list(top_level_expr) -> ENUM . IDENT LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT UNION
##
## Ends in an error in state: 235.
##
## list(top_level_expr) -> ENUM IDENT . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN UNION
##
## Ends in an error in state: 236.
##
## list(top_level_expr) -> ENUM IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 238.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET UNION
##
## Ends in an error in state: 239.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET IDENT COMMA RBRACKET RPAREN
##
## Ends in an error in state: 242.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 246.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 249.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN LBRACKET UNION
##
## Ends in an error in state: 250.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN LBRACKET IDENT COMMA RBRACKET RPAREN
##
## Ends in an error in state: 253.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 257.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET UNION
##
## Ends in an error in state: 259.
##
## list(top_level_expr) -> ENUM IDENT LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT COMMA RBRACKET RPAREN
##
## Ends in an error in state: 262.
##
## list(top_level_expr) -> ENUM IDENT LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 266.
##
## list(top_level_expr) -> ENUM IDENT LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN UNION
##
## Ends in an error in state: 270.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN COLON RPAREN
##
## Ends in an error in state: 271.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN COLON IDENT UNION
##
## Ends in an error in state: 272.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 273.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN COLON IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 275.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON RPAREN
##
## Ends in an error in state: 277.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT UNION
##
## Ends in an error in state: 278.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 279.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 281.
##
## list(top_level_expr) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 284.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN UNION
##
## Ends in an error in state: 285.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 287.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON RPAREN
##
## Ends in an error in state: 288.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT UNION
##
## Ends in an error in state: 289.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 290.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN COLON IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 292.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN UNION
##
## Ends in an error in state: 295.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . COLON expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN COLON RPAREN
##
## Ends in an error in state: 296.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN COLON IDENT UNION
##
## Ends in an error in state: 297.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 298.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN COLON IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 300.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN COLON RPAREN
##
## Ends in an error in state: 302.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON . expr LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN COLON IDENT UNION
##
## Ends in an error in state: 303.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ LPAREN LBRACKET ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ LPAREN LBRACKET ]
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr . LBRACKET list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN COLON IDENT LBRACKET RPAREN
##
## Ends in an error in state: 304.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET . list(located(expr)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN COLON IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 306.
##
## list(top_level_expr) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN COLON expr LBRACKET list(located(expr)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 310.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN RPAREN LBRACKET UNION
##
## Ends in an error in state: 311.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN RPAREN LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 313.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature)) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET UNION
##
## Ends in an error in state: 315.
##
## list(top_level_expr) -> INTERFACE IDENT LBRACKET . list(located(function_signature)) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 317.
##
## list(top_level_expr) -> INTERFACE IDENT LBRACKET list(located(function_signature)) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LBRACKET list(located(function_signature)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 321.
##
## list(top_level_expr) -> LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . EQUALS expr list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN RPAREN EQUALS RPAREN
##
## Ends in an error in state: 322.
##
## list(top_level_expr) -> LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS . expr list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN RPAREN EQUALS IDENT RPAREN
##
## Ends in an error in state: 323.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ UNION STRUCT LPAREN LET INTERFACE FN EOF ENUM ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ UNION STRUCT LPAREN LET INTERFACE FN EOF ENUM ]
## list(top_level_expr) -> LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS RPAREN
##
## Ends in an error in state: 325.
##
## list(top_level_expr) -> LET IDENT EQUALS . expr list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT RPAREN
##
## Ends in an error in state: 326.
##
## expr -> expr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ UNION STRUCT LPAREN LET INTERFACE FN EOF ENUM ]
## expr -> expr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ UNION STRUCT LPAREN LET INTERFACE FN EOF ENUM ]
## list(top_level_expr) -> LET IDENT EQUALS expr . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT EQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 331.
##
## list(top_level_expr) -> STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 334.
##
## list(top_level_expr) -> STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LPAREN RPAREN LBRACKET UNION
##
## Ends in an error in state: 335.
##
## list(top_level_expr) -> STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LPAREN RPAREN LBRACKET IDENT COLON IDENT COMMA RBRACKET RPAREN
##
## Ends in an error in state: 338.
##
## list(top_level_expr) -> STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LPAREN RPAREN LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 342.
##
## list(top_level_expr) -> STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LBRACKET UNION
##
## Ends in an error in state: 344.
##
## list(top_level_expr) -> STRUCT IDENT LBRACKET . nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> STRUCT IDENT LBRACKET . loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LBRACKET IDENT COLON IDENT COMMA RBRACKET RPAREN
##
## Ends in an error in state: 347.
##
## list(top_level_expr) -> STRUCT IDENT LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LBRACKET nonempty_list(terminated(struct_fields,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: STRUCT IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 351.
##
## list(top_level_expr) -> STRUCT IDENT LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## STRUCT IDENT LBRACKET loption(separated_nonempty_list(COMMA,struct_fields)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 356.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 359.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN LBRACKET RPAREN
##
## Ends in an error in state: 360.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN LBRACKET IDENT COMMA RBRACKET RPAREN
##
## Ends in an error in state: 363.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 367.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET RPAREN
##
## Ends in an error in state: 369.
##
## list(top_level_expr) -> UNION IDENT LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET IDENT COMMA RBRACKET RPAREN
##
## Ends in an error in state: 372.
##
## list(top_level_expr) -> UNION IDENT LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET RBRACKET RPAREN
##
## Ends in an error in state: 376.
##
## list(top_level_expr) -> UNION IDENT LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

