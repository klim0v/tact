program: SEMICOLON
##
## Ends in an error in state: 0.
##
## program' -> . program [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION UNION
##
## Ends in an error in state: 1.
##
## list(top_level_expr) -> UNION . IDENT LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT UNION
##
## Ends in an error in state: 2.
##
## list(top_level_expr) -> UNION IDENT . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN UNION
##
## Ends in an error in state: 3.
##
## list(top_level_expr) -> UNION IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT UNION
##
## Ends in an error in state: 4.
##
## nonempty_list(terminated(function_param,COMMA)) -> IDENT . COLON expr COMMA [ RPAREN ]
## nonempty_list(terminated(function_param,COMMA)) -> IDENT . COLON expr COMMA nonempty_list(terminated(function_param,COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT . COLON expr [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT . COLON expr COMMA separated_nonempty_list(COMMA,function_param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON SEMICOLON
##
## Ends in an error in state: 5.
##
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON . expr COMMA [ RPAREN ]
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON . expr COMMA nonempty_list(terminated(function_param,COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON . expr [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON . expr COMMA separated_nonempty_list(COMMA,function_param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS UNION UNION
##
## Ends in an error in state: 6.
##
## expr -> UNION . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## expr -> UNION . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> UNION . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ LPAREN ]
## fexpr -> UNION . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ LPAREN ]
##
## The known suffix of the stack is as follows:
## UNION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS UNION LBRACKET SEMICOLON
##
## Ends in an error in state: 7.
##
## expr -> UNION LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## expr -> UNION LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> UNION LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ LPAREN ]
## fexpr -> UNION LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ LPAREN ]
##
## The known suffix of the stack is as follows:
## UNION LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET UNION UNION
##
## Ends in an error in state: 8.
##
## union_member -> UNION . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> UNION . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## UNION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET UNION LBRACKET SEMICOLON
##
## Ends in an error in state: 9.
##
## union_member -> UNION LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> UNION LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## UNION LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET TYPE UNION
##
## Ends in an error in state: 10.
##
## union_member -> TYPE . LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> TYPE . LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET TYPE LBRACKET UNION
##
## Ends in an error in state: 11.
##
## union_member -> TYPE LBRACKET . nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> TYPE LBRACKET . loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## TYPE LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET IDENT UNION
##
## Ends in an error in state: 12.
##
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT . COLON expr COMMA [ RBRACKET FN ]
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT . COMMA [ RBRACKET FN ]
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT . COLON expr COMMA nonempty_list(terminated(type_fields,COMMA)) [ RBRACKET FN ]
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT . COMMA nonempty_list(terminated(type_fields,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT . COLON expr [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT . [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT . COLON expr COMMA separated_nonempty_list(COMMA,type_fields) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT . COMMA separated_nonempty_list(COMMA,type_fields) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET IDENT COMMA UNION
##
## Ends in an error in state: 13.
##
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT COMMA . [ RBRACKET FN ]
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT COMMA . nonempty_list(terminated(type_fields,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT COMMA . separated_nonempty_list(COMMA,type_fields) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET IDENT COLON SEMICOLON
##
## Ends in an error in state: 16.
##
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT COLON . expr COMMA [ RBRACKET FN ]
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT COLON . expr COMMA nonempty_list(terminated(type_fields,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT COLON . expr [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT COLON . expr COMMA separated_nonempty_list(COMMA,type_fields) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS TYPE UNION
##
## Ends in an error in state: 17.
##
## expr -> TYPE . LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## expr -> TYPE . LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> TYPE . LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET [ LPAREN ]
## fexpr -> TYPE . LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET [ LPAREN ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS TYPE LBRACKET UNION
##
## Ends in an error in state: 18.
##
## expr -> TYPE LBRACKET . nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## expr -> TYPE LBRACKET . loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> TYPE LBRACKET . nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET [ LPAREN ]
## fexpr -> TYPE LBRACKET . loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET [ LPAREN ]
##
## The known suffix of the stack is as follows:
## TYPE LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN UNION
##
## Ends in an error in state: 21.
##
## function_definition(located(ident)) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located(ident)) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT UNION
##
## Ends in an error in state: 22.
##
## function_definition(located(ident)) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located(ident)) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN UNION
##
## Ends in an error in state: 23.
##
## function_definition(located(ident)) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located(ident)) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 26.
##
## function_definition(located(ident)) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN RARROW SEMICOLON
##
## Ends in an error in state: 27.
##
## function_definition(located(ident)) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW . fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW UNION UNION
##
## Ends in an error in state: 28.
##
## fexpr -> UNION . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## fexpr -> UNION . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## UNION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW UNION LBRACKET SEMICOLON
##
## Ends in an error in state: 29.
##
## fexpr -> UNION LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## fexpr -> UNION LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## UNION LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET INTERFACE UNION
##
## Ends in an error in state: 30.
##
## union_member -> INTERFACE . LBRACKET list(located(function_signature_binding)) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## INTERFACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET INTERFACE LBRACKET UNION
##
## Ends in an error in state: 31.
##
## union_member -> INTERFACE LBRACKET . list(located(function_signature_binding)) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## INTERFACE LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN UNION
##
## Ends in an error in state: 32.
##
## function_definition(located(ident)) -> FN . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ RBRACKET FN ]
## function_definition(located(ident)) -> FN . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT UNION
##
## Ends in an error in state: 33.
##
## function_definition(located(ident)) -> FN IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ RBRACKET FN ]
## function_definition(located(ident)) -> FN IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN UNION
##
## Ends in an error in state: 34.
##
## function_definition(located(ident)) -> FN IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ RBRACKET FN ]
## function_definition(located(ident)) -> FN IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 36.
##
## function_definition(located(ident)) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 38.
##
## function_definition(located(ident)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW SEMICOLON
##
## Ends in an error in state: 39.
##
## function_definition(located(ident)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW . fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW TYPE UNION
##
## Ends in an error in state: 40.
##
## fexpr -> TYPE . LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## fexpr -> TYPE . LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW TYPE LBRACKET UNION
##
## Ends in an error in state: 41.
##
## fexpr -> TYPE LBRACKET . nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## fexpr -> TYPE LBRACKET . loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## TYPE LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN LPAREN RPAREN RARROW IDENT SEMICOLON
##
## Ends in an error in state: 45.
##
## list(sugared_function_definition) -> function_definition(located_ident_with_params) . list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## function_definition(located_ident_with_params)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 181, spurious reduction of production option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) ->
## In state 182, spurious reduction of production function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET FN IDENT LPAREN RPAREN RARROW IDENT SEMICOLON
##
## Ends in an error in state: 47.
##
## list(sugared_function_definition) -> function_definition(located(ident)) . list(sugared_function_definition) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## function_definition(located(ident))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 128, spurious reduction of production option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) ->
## In state 129, spurious reduction of production function_definition(located(ident)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS LPAREN UNION
##
## Ends in an error in state: 52.
##
## fexpr -> LPAREN . function_definition(nothing) RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN UNION
##
## Ends in an error in state: 53.
##
## function_definition(nothing) -> FN . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## function_definition(nothing) -> FN . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## FN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN UNION
##
## Ends in an error in state: 54.
##
## function_definition(nothing) -> FN LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## function_definition(nothing) -> FN LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 56.
##
## function_definition(nothing) -> FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN IDENT COLON IDENT COMMA RPAREN RARROW SEMICOLON
##
## Ends in an error in state: 57.
##
## function_definition(nothing) -> FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW . fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW INTERFACE UNION
##
## Ends in an error in state: 58.
##
## fexpr -> INTERFACE . LBRACKET list(located(function_signature_binding)) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## INTERFACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW INTERFACE LBRACKET UNION
##
## Ends in an error in state: 59.
##
## fexpr -> INTERFACE LBRACKET . list(located(function_signature_binding)) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## INTERFACE LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET FN IDENT LPAREN RPAREN RARROW IDENT SEMICOLON
##
## Ends in an error in state: 62.
##
## list(located(function_signature_binding)) -> function_definition(located(ident)) . list(located(function_signature_binding)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## function_definition(located(ident))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 128, spurious reduction of production option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) ->
## In state 129, spurious reduction of production function_definition(located(ident)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW ENUM UNION
##
## Ends in an error in state: 66.
##
## fexpr -> ENUM . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## fexpr -> ENUM . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW ENUM LBRACKET UNION
##
## Ends in an error in state: 67.
##
## fexpr -> ENUM LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## fexpr -> ENUM LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT UNION
##
## Ends in an error in state: 68.
##
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT . COMMA [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT . EQUALS expr COMMA [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT . COMMA nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT . EQUALS expr COMMA nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT . [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT . EQUALS expr [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT . COMMA separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT . EQUALS expr COMMA separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT EQUALS SEMICOLON
##
## Ends in an error in state: 69.
##
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS . expr COMMA [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS . expr COMMA nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS . expr [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS . expr COMMA separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS INTERFACE UNION
##
## Ends in an error in state: 70.
##
## expr -> INTERFACE . LBRACKET list(located(function_signature_binding)) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> INTERFACE . LBRACKET list(located(function_signature_binding)) RBRACKET [ LPAREN ]
##
## The known suffix of the stack is as follows:
## INTERFACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS INTERFACE LBRACKET UNION
##
## Ends in an error in state: 71.
##
## expr -> INTERFACE LBRACKET . list(located(function_signature_binding)) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> INTERFACE LBRACKET . list(located(function_signature_binding)) RBRACKET [ LPAREN ]
##
## The known suffix of the stack is as follows:
## INTERFACE LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS INTERFACE LBRACKET RBRACKET UNION
##
## Ends in an error in state: 73.
##
## expr -> INTERFACE LBRACKET list(located(function_signature_binding)) RBRACKET . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> INTERFACE LBRACKET list(located(function_signature_binding)) RBRACKET . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## INTERFACE LBRACKET list(located(function_signature_binding)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS INT UNION
##
## Ends in an error in state: 74.
##
## expr -> INT . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> INT . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT UNION
##
## Ends in an error in state: 75.
##
## expr -> IDENT . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> IDENT . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS ENUM UNION
##
## Ends in an error in state: 76.
##
## expr -> ENUM . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## expr -> ENUM . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> ENUM . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ LPAREN ]
## fexpr -> ENUM . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ LPAREN ]
##
## The known suffix of the stack is as follows:
## ENUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS ENUM LBRACKET UNION
##
## Ends in an error in state: 77.
##
## expr -> ENUM LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## expr -> ENUM LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> ENUM LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ LPAREN ]
## fexpr -> ENUM LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ LPAREN ]
##
## The known suffix of the stack is as follows:
## ENUM LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS ENUM LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 81.
##
## expr -> ENUM LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> ENUM LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## ENUM LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS ENUM LBRACKET RBRACKET UNION
##
## Ends in an error in state: 84.
##
## expr -> ENUM LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> ENUM LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## ENUM LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 86.
##
## expr -> function_call . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> function_call . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## function_call
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS LPAREN FN LPAREN RPAREN RARROW IDENT RPAREN UNION
##
## Ends in an error in state: 87.
##
## function_call -> fexpr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN FN COMMA ]
## function_call -> fexpr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN FN COMMA ]
##
## The known suffix of the stack is as follows:
## fexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT LPAREN SEMICOLON
##
## Ends in an error in state: 88.
##
## function_call -> fexpr LPAREN . nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## function_call -> fexpr LPAREN . loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## fexpr LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT LPAREN IDENT SEMICOLON
##
## Ends in an error in state: 94.
##
## nonempty_list(terminated(located(expr),COMMA)) -> expr . COMMA [ RPAREN ]
## nonempty_list(terminated(located(expr),COMMA)) -> expr . COMMA nonempty_list(terminated(located(expr),COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,located(expr)) -> expr . [ RPAREN ]
## separated_nonempty_list(COMMA,located(expr)) -> expr . COMMA separated_nonempty_list(COMMA,located(expr)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 75, spurious reduction of production expr -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT LPAREN IDENT COMMA SEMICOLON
##
## Ends in an error in state: 95.
##
## nonempty_list(terminated(located(expr),COMMA)) -> expr COMMA . [ RPAREN ]
## nonempty_list(terminated(located(expr),COMMA)) -> expr COMMA . nonempty_list(terminated(located(expr),COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,located(expr)) -> expr COMMA . separated_nonempty_list(COMMA,located(expr)) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT EQUALS IDENT SEMICOLON
##
## Ends in an error in state: 98.
##
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS expr . COMMA [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS expr . COMMA nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS expr . [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS expr . COMMA separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT EQUALS expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 75, spurious reduction of production expr -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT EQUALS IDENT COMMA UNION
##
## Ends in an error in state: 99.
##
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS expr COMMA . [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT EQUALS expr COMMA . nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT EQUALS expr COMMA . separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT EQUALS expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT COMMA UNION
##
## Ends in an error in state: 102.
##
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT COMMA . [ RBRACKET FN ]
## nonempty_list(terminated(enum_member,COMMA)) -> IDENT COMMA . nonempty_list(terminated(enum_member,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,enum_member) -> IDENT COMMA . separated_nonempty_list(COMMA,enum_member) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN IDENT COLON IDENT COMMA RPAREN RARROW IDENT UNION
##
## Ends in an error in state: 112.
##
## function_call -> fexpr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## function_call -> fexpr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## function_definition(nothing) -> FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr . option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW IDENT LBRACKET SEMICOLON
##
## Ends in an error in state: 113.
##
## option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) -> LBRACKET . list(located(stmt)) RBRACKET [ SEMICOLON RPAREN RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW IDENT LBRACKET IDENT SEMICOLON SEMICOLON
##
## Ends in an error in state: 114.
##
## list(located(stmt)) -> stmt . list(located(stmt)) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## stmt
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW IDENT LBRACKET IDENT RPAREN
##
## Ends in an error in state: 116.
##
## stmt -> expr . SEMICOLON [ UNION TYPE RBRACKET LPAREN INTERFACE INT IDENT FN ENUM ]
##
## The known suffix of the stack is as follows:
## expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 75, spurious reduction of production expr -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN RPAREN UNION
##
## Ends in an error in state: 122.
##
## function_definition(nothing) -> FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN RPAREN RARROW SEMICOLON
##
## Ends in an error in state: 123.
##
## function_definition(nothing) -> FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW . fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS FN LPAREN RPAREN RARROW IDENT UNION
##
## Ends in an error in state: 124.
##
## function_call -> fexpr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## function_call -> fexpr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
## function_definition(nothing) -> FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr . option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RPAREN RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS LPAREN FN LPAREN RPAREN RARROW IDENT SEMICOLON
##
## Ends in an error in state: 126.
##
## fexpr -> LPAREN function_definition(nothing) . RPAREN [ SEMICOLON RPAREN RBRACKET LPAREN LBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN function_definition(nothing)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 124, spurious reduction of production option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) ->
## In state 125, spurious reduction of production function_definition(nothing) -> FN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW IDENT UNION
##
## Ends in an error in state: 128.
##
## function_call -> fexpr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_call -> fexpr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_definition(located(ident)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr . option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET IDENT UNION
##
## Ends in an error in state: 132.
##
## union_member -> IDENT . [ RBRACKET FN COMMA ]
## union_member -> IDENT . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RBRACKET FN COMMA ]
## union_member -> IDENT . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET IDENT LPAREN SEMICOLON
##
## Ends in an error in state: 133.
##
## union_member -> IDENT LPAREN . nonempty_list(terminated(located(expr),COMMA)) RPAREN [ RBRACKET FN COMMA ]
## union_member -> IDENT LPAREN . loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET ENUM UNION
##
## Ends in an error in state: 138.
##
## union_member -> ENUM . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> ENUM . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET ENUM LBRACKET UNION
##
## Ends in an error in state: 139.
##
## union_member -> ENUM LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
## union_member -> ENUM LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET [ RBRACKET FN COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET UNION LBRACKET RBRACKET UNION
##
## Ends in an error in state: 146.
##
## nonempty_list(terminated(located(union_member),COMMA)) -> union_member . COMMA [ RBRACKET FN ]
## nonempty_list(terminated(located(union_member),COMMA)) -> union_member . COMMA nonempty_list(terminated(located(union_member),COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,located(union_member)) -> union_member . [ RBRACKET FN ]
## separated_nonempty_list(COMMA,located(union_member)) -> union_member . COMMA separated_nonempty_list(COMMA,located(union_member)) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## union_member
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET IDENT COMMA SEMICOLON
##
## Ends in an error in state: 147.
##
## nonempty_list(terminated(located(union_member),COMMA)) -> union_member COMMA . [ RBRACKET FN ]
## nonempty_list(terminated(located(union_member),COMMA)) -> union_member COMMA . nonempty_list(terminated(located(union_member),COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,located(union_member)) -> union_member COMMA . separated_nonempty_list(COMMA,located(union_member)) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## union_member COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN RARROW IDENT UNION
##
## Ends in an error in state: 157.
##
## function_call -> fexpr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_call -> fexpr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_definition(located(ident)) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr . option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN UNION
##
## Ends in an error in state: 159.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 161.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN RARROW SEMICOLON
##
## Ends in an error in state: 162.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW . fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN RARROW IDENT UNION
##
## Ends in an error in state: 163.
##
## function_call -> fexpr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_call -> fexpr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr . option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN UNION
##
## Ends in an error in state: 166.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN RARROW SEMICOLON
##
## Ends in an error in state: 167.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW . fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LPAREN RPAREN RARROW IDENT UNION
##
## Ends in an error in state: 168.
##
## function_call -> fexpr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_call -> fexpr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr . option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 171.
##
## function_definition(located(ident)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN UNION
##
## Ends in an error in state: 172.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 174.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN RARROW SEMICOLON
##
## Ends in an error in state: 175.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW . fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN IDENT COLON IDENT COMMA RPAREN RARROW IDENT UNION
##
## Ends in an error in state: 176.
##
## function_call -> fexpr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_call -> fexpr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr . option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN RARROW fexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN UNION
##
## Ends in an error in state: 179.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN RARROW SEMICOLON
##
## Ends in an error in state: 180.
##
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW . fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN RARROW IDENT UNION
##
## Ends in an error in state: 181.
##
## function_call -> fexpr . LPAREN nonempty_list(terminated(located(expr),COMMA)) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_call -> fexpr . LPAREN loption(separated_nonempty_list(COMMA,located(expr))) RPAREN [ SEMICOLON RBRACKET LPAREN LBRACKET FN ]
## function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr . option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) [ SEMICOLON RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS TYPE LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 184.
##
## expr -> TYPE LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> TYPE LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## TYPE LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS TYPE LBRACKET RBRACKET UNION
##
## Ends in an error in state: 187.
##
## expr -> TYPE LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> TYPE LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## TYPE LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET IDENT COLON IDENT SEMICOLON
##
## Ends in an error in state: 188.
##
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT COLON expr . COMMA [ RBRACKET FN ]
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT COLON expr . COMMA nonempty_list(terminated(type_fields,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT COLON expr . [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT COLON expr . COMMA separated_nonempty_list(COMMA,type_fields) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 75, spurious reduction of production expr -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET IDENT COLON IDENT COMMA UNION
##
## Ends in an error in state: 189.
##
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT COLON expr COMMA . [ RBRACKET FN ]
## nonempty_list(terminated(type_fields,COMMA)) -> IDENT COLON expr COMMA . nonempty_list(terminated(type_fields,COMMA)) [ RBRACKET FN ]
## separated_nonempty_list(COMMA,type_fields) -> IDENT COLON expr COMMA . separated_nonempty_list(COMMA,type_fields) [ RBRACKET FN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS UNION LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 206.
##
## expr -> UNION LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> UNION LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## UNION LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS UNION LBRACKET RBRACKET UNION
##
## Ends in an error in state: 209.
##
## expr -> UNION LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET . [ SEMICOLON RPAREN RBRACKET FN COMMA ]
## fexpr -> UNION LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET . [ LPAREN ]
##
## The known suffix of the stack is as follows:
## UNION LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT SEMICOLON
##
## Ends in an error in state: 210.
##
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON expr . COMMA [ RPAREN ]
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON expr . COMMA nonempty_list(terminated(function_param,COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON expr . [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON expr . COMMA separated_nonempty_list(COMMA,function_param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 75, spurious reduction of production expr -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA UNION
##
## Ends in an error in state: 211.
##
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON expr COMMA . [ RPAREN ]
## nonempty_list(terminated(function_param,COMMA)) -> IDENT COLON expr COMMA . nonempty_list(terminated(function_param,COMMA)) [ RPAREN ]
## separated_nonempty_list(COMMA,function_param) -> IDENT COLON expr COMMA . separated_nonempty_list(COMMA,function_param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## IDENT COLON expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 215.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET SEMICOLON
##
## Ends in an error in state: 216.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 219.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET IDENT COMMA RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 220.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE UNION
##
## Ends in an error in state: 221.
##
## list(top_level_expr) -> TYPE . IDENT LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE . IDENT LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT UNION
##
## Ends in an error in state: 222.
##
## list(top_level_expr) -> TYPE IDENT . LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT . LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN UNION
##
## Ends in an error in state: 223.
##
## list(top_level_expr) -> TYPE IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 225.
##
## list(top_level_expr) -> TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET UNION
##
## Ends in an error in state: 226.
##
## list(top_level_expr) -> TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 229.
##
## list(top_level_expr) -> TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET IDENT COMMA RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 230.
##
## list(top_level_expr) -> TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET UNION
##
## Ends in an error in state: 231.
##
## list(top_level_expr) -> LET . IDENT EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT UNION
##
## Ends in an error in state: 232.
##
## list(top_level_expr) -> LET IDENT . EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN UNION
##
## Ends in an error in state: 233.
##
## list(top_level_expr) -> LET IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> LET IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 235.
##
## list(top_level_expr) -> LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN IDENT COLON IDENT COMMA RPAREN EQUALS SEMICOLON
##
## Ends in an error in state: 236.
##
## list(top_level_expr) -> LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS . expr SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN IDENT COLON IDENT COMMA RPAREN EQUALS IDENT RPAREN
##
## Ends in an error in state: 237.
##
## list(top_level_expr) -> LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 75, spurious reduction of production expr -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN IDENT COLON IDENT COMMA RPAREN EQUALS IDENT SEMICOLON SEMICOLON
##
## Ends in an error in state: 238.
##
## list(top_level_expr) -> LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN EQUALS expr SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE UNION
##
## Ends in an error in state: 239.
##
## list(top_level_expr) -> INTERFACE . IDENT LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT UNION
##
## Ends in an error in state: 240.
##
## list(top_level_expr) -> INTERFACE IDENT . LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN UNION
##
## Ends in an error in state: 241.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> INTERFACE IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 243.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET UNION
##
## Ends in an error in state: 244.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET UNION
##
## Ends in an error in state: 246.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 247.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM UNION
##
## Ends in an error in state: 248.
##
## list(top_level_expr) -> ENUM . IDENT LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM . IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT UNION
##
## Ends in an error in state: 249.
##
## list(top_level_expr) -> ENUM IDENT . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT . LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN UNION
##
## Ends in an error in state: 250.
##
## list(top_level_expr) -> ENUM IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN . nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN . loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN UNION
##
## Ends in an error in state: 252.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET UNION
##
## Ends in an error in state: 253.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 256.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET IDENT COMMA RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 257.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN RARROW IDENT RBRACKET
##
## Ends in an error in state: 259.
##
## list(top_level_expr) -> function_definition(located_ident_with_params) . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## function_definition(located_ident_with_params)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 181, spurious reduction of production option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) ->
## In state 182, spurious reduction of production function_definition(located_ident_with_params) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN LPAREN RPAREN RARROW IDENT SEMICOLON SEMICOLON
##
## Ends in an error in state: 260.
##
## list(top_level_expr) -> function_definition(located_ident_with_params) SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## function_definition(located_ident_with_params) SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW IDENT RBRACKET
##
## Ends in an error in state: 262.
##
## list(top_level_expr) -> function_definition(located(ident)) . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## function_definition(located(ident))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 128, spurious reduction of production option(delimited(LBRACKET,list(located(stmt)),RBRACKET)) ->
## In state 129, spurious reduction of production function_definition(located(ident)) -> FN IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN RARROW fexpr option(delimited(LBRACKET,list(located(stmt)),RBRACKET))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: FN IDENT LPAREN RPAREN RARROW IDENT SEMICOLON SEMICOLON
##
## Ends in an error in state: 263.
##
## list(top_level_expr) -> function_definition(located(ident)) SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## function_definition(located(ident)) SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET UNION
##
## Ends in an error in state: 267.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 268.
##
## list(top_level_expr) -> ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 271.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN LBRACKET UNION
##
## Ends in an error in state: 272.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 275.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN LBRACKET IDENT COMMA RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 276.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN LBRACKET RBRACKET UNION
##
## Ends in an error in state: 280.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LPAREN RPAREN LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 281.
##
## list(top_level_expr) -> ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET UNION
##
## Ends in an error in state: 283.
##
## list(top_level_expr) -> ENUM IDENT LBRACKET . nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> ENUM IDENT LBRACKET . loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 286.
##
## list(top_level_expr) -> ENUM IDENT LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET IDENT COMMA RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 287.
##
## list(top_level_expr) -> ENUM IDENT LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LBRACKET nonempty_list(terminated(enum_member,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 291.
##
## list(top_level_expr) -> ENUM IDENT LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENUM IDENT LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 292.
##
## list(top_level_expr) -> ENUM IDENT LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## ENUM IDENT LBRACKET loption(separated_nonempty_list(COMMA,enum_member)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 296.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN RPAREN LBRACKET UNION
##
## Ends in an error in state: 297.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN RPAREN LBRACKET RBRACKET UNION
##
## Ends in an error in state: 299.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LPAREN RPAREN LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 300.
##
## list(top_level_expr) -> INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET UNION
##
## Ends in an error in state: 302.
##
## list(top_level_expr) -> INTERFACE IDENT LBRACKET . list(located(function_signature_binding)) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 304.
##
## list(top_level_expr) -> INTERFACE IDENT LBRACKET list(located(function_signature_binding)) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LBRACKET list(located(function_signature_binding)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: INTERFACE IDENT LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 305.
##
## list(top_level_expr) -> INTERFACE IDENT LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## INTERFACE IDENT LBRACKET list(located(function_signature_binding)) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 309.
##
## list(top_level_expr) -> LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . EQUALS expr SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN RPAREN EQUALS SEMICOLON
##
## Ends in an error in state: 310.
##
## list(top_level_expr) -> LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS . expr SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN RPAREN EQUALS IDENT RPAREN
##
## Ends in an error in state: 311.
##
## list(top_level_expr) -> LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 75, spurious reduction of production expr -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT LPAREN RPAREN EQUALS IDENT SEMICOLON SEMICOLON
##
## Ends in an error in state: 312.
##
## list(top_level_expr) -> LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN EQUALS expr SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS SEMICOLON
##
## Ends in an error in state: 314.
##
## list(top_level_expr) -> LET IDENT EQUALS . expr SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT RPAREN
##
## Ends in an error in state: 315.
##
## list(top_level_expr) -> LET IDENT EQUALS expr . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT EQUALS expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 75, spurious reduction of production expr -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LET IDENT EQUALS IDENT SEMICOLON SEMICOLON
##
## Ends in an error in state: 316.
##
## list(top_level_expr) -> LET IDENT EQUALS expr SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## LET IDENT EQUALS expr SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET UNION
##
## Ends in an error in state: 321.
##
## list(top_level_expr) -> TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 322.
##
## list(top_level_expr) -> TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 325.
##
## list(top_level_expr) -> TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN RPAREN LBRACKET UNION
##
## Ends in an error in state: 326.
##
## list(top_level_expr) -> TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN RPAREN LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 329.
##
## list(top_level_expr) -> TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN RPAREN LBRACKET IDENT COMMA RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 330.
##
## list(top_level_expr) -> TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN RPAREN LBRACKET RBRACKET UNION
##
## Ends in an error in state: 334.
##
## list(top_level_expr) -> TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LPAREN RPAREN LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 335.
##
## list(top_level_expr) -> TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET UNION
##
## Ends in an error in state: 337.
##
## list(top_level_expr) -> TYPE IDENT LBRACKET . nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> TYPE IDENT LBRACKET . loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 340.
##
## list(top_level_expr) -> TYPE IDENT LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET IDENT COMMA RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 341.
##
## list(top_level_expr) -> TYPE IDENT LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LBRACKET nonempty_list(terminated(type_fields,COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 345.
##
## list(top_level_expr) -> TYPE IDENT LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: TYPE IDENT LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 346.
##
## list(top_level_expr) -> TYPE IDENT LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## TYPE IDENT LBRACKET loption(separated_nonempty_list(COMMA,type_fields)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET UNION
##
## Ends in an error in state: 351.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN IDENT COLON IDENT COMMA RPAREN LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 352.
##
## list(top_level_expr) -> UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN nonempty_list(terminated(function_param,COMMA)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN UNION
##
## Ends in an error in state: 355.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN . LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN LBRACKET SEMICOLON
##
## Ends in an error in state: 356.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 359.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN LBRACKET IDENT COMMA RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 360.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN LBRACKET RBRACKET UNION
##
## Ends in an error in state: 364.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LPAREN RPAREN LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 365.
##
## list(top_level_expr) -> UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LPAREN loption(separated_nonempty_list(COMMA,function_param)) RPAREN LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET SEMICOLON
##
## Ends in an error in state: 367.
##
## list(top_level_expr) -> UNION IDENT LBRACKET . nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
## list(top_level_expr) -> UNION IDENT LBRACKET . loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET IDENT COMMA RBRACKET UNION
##
## Ends in an error in state: 370.
##
## list(top_level_expr) -> UNION IDENT LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET IDENT COMMA RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 371.
##
## list(top_level_expr) -> UNION IDENT LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LBRACKET nonempty_list(terminated(located(union_member),COMMA)) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET RBRACKET UNION
##
## Ends in an error in state: 375.
##
## list(top_level_expr) -> UNION IDENT LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET . SEMICOLON list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: UNION IDENT LBRACKET RBRACKET SEMICOLON SEMICOLON
##
## Ends in an error in state: 376.
##
## list(top_level_expr) -> UNION IDENT LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON . list(top_level_expr) [ EOF ]
##
## The known suffix of the stack is as follows:
## UNION IDENT LBRACKET loption(separated_nonempty_list(COMMA,located(union_member))) list(sugared_function_definition) RBRACKET SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

